<div id="mainMenu" style="width:100%; text-align:left;"></div>
<script>
        window.locationId = 0;
        window.patientId = 0;
        window.visitId = 0;
        jsMainMenu=new dhtmlXMenuBarObject('mainMenu','100%',30,"");
        jsMainMenu.sysGfxPath = '<?=$this->baseUrl?>/img/';
        jsMainMenu.setOnClickHandler(onMenuItemSelect);
        jsMainMenu.loadXML('<?=$this->baseUrl?>/menu.raw');

        function refreshCurrentTab() {
                mainTabbar.forceLoad(mainTabbar.getActiveTab());
        }

        function onMenuItemSelect(itemId,itemValue) {
                switch(itemId) {
			case 'All_review___sign_changes':
				winES = windowReviewSignDocuments();
				break;
			case 'All_add_vitals':
				windowAddVitals();
				break;
			case 'All_flow_sheet':
				window.open('<?=$this->baseUrl?>/reports.raw/flow-sheet-template?reportTemplateId=5&personId=' + mainController.getActivePatient(),'pdfTemplate');
				break;
			case 'All_vitals___flowsheet_video':
				window.open('<?=$this->baseUrl?>/attachments.raw/view-attachment?attachmentId=51561632','helpVideo');
				break;
			case 'All_quit':
				if (confirm('<?=__("Are you sure you want to logout of the application, unsaved data will be lost?")?>')) {
                                	window.location="<?=$this->baseUrl?>/logout";
				}
				break;
			case 'All_select_patient':
				windowSelectPatient();
				break;
			case 'All_change_password':
				globalCreateWindow("winChangePasswordId",new Array(),"<?=$this->baseUrl?>/admin-users.raw/change-password","<?=__('Change Password')?>",200,200);
				break;
			case 'All_edit_signing_key':
				globalCreateWindow("winEditSigningKeyId",new Array(),"<?=$this->baseUrl?>/admin-users.raw/edit-signing-key","<?=__('Edit Signing Key')?>",200,200);
				break;
			case 'All_add_patient':
				globalCreateWindow("windowNewPatientId",[],"<?=$this->baseUrl?>/patient-new.raw","<?=__('Add Patient')?>",750,600);
				break;
			case "All_manage_schedules":
			case "All_schedule_manager":
				globalCreateWindow("windowScheduleManagerId",[],"<?=$this->baseUrl?>/schedule-manager.raw","<?=__('Manage Schedules')?>",800,600);
				break;
			case "All_my_preferences":
				globalCreateWindow("winMyPreferencesId",[],"<?=$this->baseUrl?>/users.raw/preferences","<?=__('My Preferences')?>",400,400);
				break;
                        default:
                                alert("Button "+itemId+" was pressed "+itemValue);
                                break;
                }
        };

function windowAddVitals(jsCallback) {
	var patientId = mainController.getActivePatient();
	if (parseInt(patientId) == 0) {
		alert("No patient selected.");
		return;
	}
	if (jsCallback == undefined) {
		jsCallback = '';
	}
	var params = [];
	params.push("personId="+patientId);
	params.push("jsCallback="+jsCallback);
	return globalCreateWindow("windowAddVitalSignsId",params,"<?=$this->baseUrl?>/vital-signs.raw/add","<?=__('Add Vitals')?>",600,400);
}

function windowReviewSignDocuments() {
	return globalCreateWindow("windowESignId",new Array(),"<?=$this->baseUrl?>/e-sign.raw","<?=__('Review / Sign Documents')?>",450,450);
}

function windowSelectPatient(byPass) {
	var patientId = mainController.getActivePatient();
	if (!byPass && patientId != 0) {
		dojo.xhrGet({
			url: globalBaseUrl + '/e-sign.raw/count-unsigned',
			handleAs: "json",
			load: function(data,ioArgs) {
				if (data.counter > 0) {
					var localWin = windowReviewSignDocuments();
					localWin.attachEvent("onClose",function(win){ windowSelectPatient(true); return true; });
				}
				else {
					windowSelectPatient(true);
				}
				return data;
			},
			error: function(response, ioArgs) {
				console.error("HTTP status code: ", ioArgs.xhr.status);
				return response;
			}
		});
	}
	else {
		dhxWins.setImagePath("<?=$this->baseUrl?>/img/");
		dhxWins.setSkin('clear_silver');
		winSP = dhxWins.createWindow('windowSelectPatientId',60,10,800,650);
		winSP.setText('Select Patient');
		winSP.attachURL('<?=$this->baseUrl?>/patient-select.raw',true);
		//winSP.setModal(true);
		winSP.centerOnScreen();
	}
}
function closeWindowSelectPatient() {
	winSP.close();
	refreshCurrentTab();
}

function windowPatientDetails() {
	var patientId = mainController.getActivePatient();
	if (parseInt(patientId) == 0) {
		windowSelectPatient();
		return;
	}
	dhxWins.setImagePath("<?=$this->baseUrl?>/img/");
	dhxWins.setSkin('clear_silver');
	winPD = dhxWins.createWindow('windowPatientDetailsId',60,10,900,900);
	winPD.setText('<?=__('Patient Details')?>');
	winPD.attachURL('<?=$this->baseUrl?>/patient.raw/details?patientId='+patientId,true);
	winPD.centerOnScreen();
}

var globAlerts = new Array();
function executeJumpLinkAlert(id) {
	for (var i in globAlerts) {
		if (globAlerts[i].id == id) {
			var jsCode = globAlerts[i].jumpLink;
			var objects = globAlerts[i].others;
			var arrObj = objects.split(":");
			jsCode += "\njumpLink"+arrObj[0]+"('"+arrObj[1]+"','"+arrObj[2]+"');";
			eval(jsCode);
			break;
		}
	}
}

function processAlertNext() {
	var processAlertItemsSelect = dojo.byId("processAlertItems");
	if (processAlertItemsSelect.options.length > 1) {
		var prevSelected = false;
		for (var i in processAlertItemsSelect.options) {
			if (processAlertItemsSelect.options[i].selected) {
				prevSelected = true;
			}
			if (!processAlertItemsSelect.options[i].selected && prevSelected) {
				processAlertItemsSelect.options[i].selected = true;
				executeJumpLinkAlert(processAlertItemsSelect.options[i].value);
				break;
			}
		}
		if (!prevSelected) {
			windowReviewSignDocuments();
		}
	}
	else {
		windowReviewSignDocuments();
	}
}

function markAlertDone() {
	var processAlertItemsSelect = dojo.byId("processAlertItems");
	dojo.xhrGet({
		url: globalBaseUrl + "/general-alerts.raw/mark-alert-done?generalAlertId=" + processAlertItemsSelect.options[processAlertItemsSelect.selectedIndex].value,
		handleAs: "json",
		load: function(data,ioArgs) {
			return data;
		},
		error: function(response, ioArgs) {
			console.error("HTTP status code: ", ioArgs.xhr.status);
			return response;
		}
	});

	if (processAlertItemsSelect.options.length > 1) {
		var prevSelected = false;
		for (var i in processAlertItemsSelect.options) {
			if (processAlertItemsSelect.options[i].selected) {
				prevSelected = true;
			}
			if (!processAlertItemsSelect.options[i].selected && prevSelected) {
				processAlertItemsSelect.options[i].selected = true;
				executeJumpLinkAlert(processAlertItemsSelect.options[i].value);
				break;
			}
		}
		if (!prevSelected) {
			windowReviewSignDocuments();
		}
	}
	else {
		windowReviewSignDocuments();
	}
}

function openHealthStatusAlerts() {
	visitSelector.openWindow();
	visitSelector.oAccordion.openItem(visitSelector.accordionVisitDetailsId);
	visitSelector.accordionOpen(visitSelector.accordionVisitDetailsId);
	visitSelector.oVisitDetailsTabbar.setTabActive(visitSelector.tabHsaId);
}

function processAlertForward(alertId,callback) {
	//processAlertNext(); // temporarily set an alias of processAlertNext
	var params = [];
	params.push("alertId="+alertId);
	if (callback != undefined) {
		params.push("jsCallback="+callback);
	}
	var winForwardAlert = globalCreateWindow("windowForwardAlertId",params,"<?=$this->baseUrl?>/general-alerts.raw/forward-alert","<?=__('Forward Alert')?>",600,400);
}

function processStop() {
	var mainProcessingBar = dojo.byId("mainProcessingBar");
	mainProcessingBar.style.display = "none";
}

function openPostings() {
	var params = new Array();
	var patientId = mainController.getActivePatient();
	params.push("personId="+patientId);
	globalCreateWindow("winPatientAllergiesId",params,"<?=$this->baseUrl?>/allergies.raw","<?=__('Patient Postings')?>",600,500);
}
</script>

<div id="mainProcessingBar" style="background-color:#ECE9D8;border:thin solid darkGrey;width:99.9%;display:none;">
<?=__('Processing Alert')?>: <select id="processAlertItems" style="width:50%;" onChange="executeJumpLinkAlert(this.options[this.selectedIndex].value)">
</select>
<input type="button" id="processNextId" onclick="processAlertNext()" value="<?=__('Next')?>" />
<input type="button" id="processMarkDone" value="<?=__('Done')?>" onclick="markAlertDone()" />
<input type="button" id="processStopId" onclick="processStop()" value="<?=__('Stop')?>" />
</div>

<div id="mainToolbar" style="width:99.9%;height:65px;"></div>
<script>
        function initMainToolbar(loadAction,personId) {
		jsMainToolbar=new dhtmlXToolbarObject('mainToolbar','ClearSilver');
	        jsMainToolbar.setIconsPath("<?=$this->baseUrl?>/img/");
	        jsMainToolbar.attachEvent('onClick',function (id) {onToolbarClick(id);} );
		var additionalParams = new Array();
		additionalParams.push("personId="+personId);
		additionalParams.push("visitId="+mainController.getActiveVisit());
	        jsMainToolbar.loadXML('<?=$this->baseUrl?>/main-toolbar.raw?' + additionalParams.join('&'), loadAction);
        }
        initMainToolbar();

    function onToolbarClick(itemId) {
        switch (itemId) {
                case "tbSelectPatient":
			if (mainController.getActivePatient() > 0) {
                        	windowPatientDetails();
			}
			else {
                        	windowSelectPatient();
			}
                        break;
                case "tbSelectVisit":
                        visitSelector.openWindow();
                        break;
		case "tbSelectTeam":
			teamSelector.openWindow();
			break;
		case "tbAlerts":
			// do nothing
			break;
                default:
                        alert("Button "+itemId + " was pressed");
        }
    };

</script>
<div id="mainTabbar_container" style="width:99.9%;height:505px;" align="left" >
<script>
    mainTabbar = new dhtmlXTabBar('mainTabbar_container','bottom','20');
    mainTabbar.setImagePath('<?=$this->baseUrl?>/img/');
    mainTabbar.setStyle('silver');
    mainTabbar.setHrefMode('ajax');
    mainTabbar.setSkinColors('#FFFFFF,#FFFACD');

function setActiveTab(activeTab) {
	mainTabbar.setOnTabContentLoaded(null);
	dojo.xhrPost ({
		url: '<?=$this->baseUrl?>/main.raw/set-active-tab',
		handleAs: 'json',
		content: {
			activeTab: activeTab,
		},
		load: function (data) {
			jsMainMenu.clearAll();
			jsMainMenu.loadXML('<?=$this->baseUrl?>/menu.raw');
		},
		error: function (er) {
			alert('err: ' + er);
		}
	});
	mainController.attachPageActivityListener();
}

function mainTabbarClick(id) {
	//contents of certain stabs when moving between iframe and ajax will stick and show, this hides that content
	if(mainTabbar._getTabById(mainTabbar.getActiveTab()) != undefined) {
                oldTab = mainTabbar._getTabById(mainTabbar.getActiveTab());
                oldTab.parentNode.parentNode.parentNode.tabbar._content[oldTab.idd].style.display = 'none';
                newTab = mainTabbar._getTabById(id);
                newTab.parentNode.parentNode.parentNode.tabbar._content[newTab.idd].style.display = 'block';
        }
	setActiveTab(id.substr(4));
        switch(id) {
	<?foreach ($this->mainTabs as $tabName => $tab):?>
	case 'tab_<?=$tabName?>':
		<? if($tabName == 'Calendar' || $tabName == "Billing" || $tabName == "Reports" || $tabName == "Admin" || $tabName == 'Messaging'):?>
                dojo.byId('mainToolbar').style.display = 'none';
                <?else:?>
                dojo.byId('mainToolbar').style.display = 'block';
                <?endif?>
    		mainTabbar.setHrefMode('<?=$tab['hrefMode']?>');
                mainTabbar.setContentHref(id,'<?=$tab['url']?>');
		break;
	<?endforeach?>
            default:
                alert("You selected a tab " + id + " that does not exist");
        }
        return true;
    }
	<?foreach ($this->mainTabs as $tabName => $url):?>
	mainTabbar.addTab('tab_<?=str_replace(' ','_',$tabName)?>','<?=$tabName?>','95');
    	mainTabbar.setContentHref('tab_<?=$tabName?>','blank.php');
	<?endforeach?>
	mainTabbar.setOnSelectHandler(mainTabbarClick);
	mainTabbar.setTabActive('tab_<?=$this->activeTab?>');


function dhtmlxCatchError(type,desc,erData) {
	var xmlHttp = erData[0];
	var responseText = xmlHttp.responseText;
	var accessDenied = "<?=__('Access denied')?>";
	if (responseText.indexOf(accessDenied) != -1) {
		alert(accessDenied);
	}
	else {
		alert(type+": "+desc);
	}
	return false;
}
dhtmlxError.catchError("ALL",dhtmlxCatchError);

    </script>
</div>

