<fieldset>
<legend><?=__('Formulary Name: ').$this->prettyName?></legend>
<div id="formularySelectAutoCompleteDiv"></div>
<br />
<input type="button" id="formularyAddButton" value="<?=__('Add to current formulary')?>" disabled="disabled" onclick="addSelectedFormulary()" />
<br />
<br />
<div id="formularyGridContainer" style="position:relative;height:200px;">
</fieldset>

<script>
//dojo.byId("formularyAddButton").disabled = false;

var currentFormularyData = null;

function openFormularyEditWindow(formularyId,data) {
	if (formularyId == undefined || formularyId == null) {
		formularyId = 0;
	}
	dhxWins.setImagePath("<?=$this->baseUrl?>/img/");
	dhxWins.setSkin('clear_silver');
	var winFE = dhxWins.createWindow('windowFormularyEditId',60,10,350,250);
	winFE.setText('<?=__('Add / Edit Formulary')?>');
	if (data == undefined) {
		winFE.attachURL('<?=$this->baseUrl?>/formulary-manager.raw/edit-formulary?name=<?=$this->tableName?>&formularyId='+formularyId,true);
	}
	else {
		winFE.attachURL('<?=$this->baseUrl?>/formulary-manager.raw/edit-formulary?name=<?=$this->tableName?>&formularyId='+formularyId+'&fullNDC='+data.full_ndc+'&directions='+data.directions+'&comments='+data.comments+'&price='+data.price,true);
	}
	//winFE.setModal(true);
	winFE.centerOnScreen();
}

function addSelectedFormulary() {
	// dummy data
	//currentFormularyData = {'full_ndc':'000002-0604-40','directions':'directions','comments':'comments','price':'price'};
	if (currentFormularyData == null) {
		return;
	}
	if (currentFormularyData.full_ndc == undefined || currentFormularyData.full_ndc == null) {
		currentFormularyData.full_ndc = '';
	}
	if (currentFormularyData.directions == undefined || currentFormularyData.directions == null) {
		currentFormularyData.directions = '';
	}
	if (currentFormularyData.comments == undefined || currentFormularyData.comments == null) {
		currentFormularyData.comments = '';
	}
	if (currentFormularyData.price == undefined || currentFormularyData.price == null) {
		currentFormularyData.price = 0;
	}
	//openFormularyEditWindow(null,currentFormularyData);
	dojo.xhrPost({
		url: "<?=$this->baseUrl?>/formulary-manager.raw/process-edit",
		handleAs: "json",
		content: {
			name: '<?=$this->tableName?>',
			'formulary[fullNDC]': currentFormularyData.full_ndc,
			'formulary[directions]': currentFormularyData.directions,
			'formulary[comments]': currentFormularyData.comments,
			'formulary[price]': currentFormularyData.price,
		},
		load: function (data) {
			currentFormularyData = null;
			reloadFormularyGrid();
			dojo.byId("formularyAddButton").disabled = true;
		},
		error: function (error) {
			alert(error);
			console.error ('Error: ', error);
		}
	});
}

if (fscb != undefined) {
	fscb.destroyRecursive();
	fscb = null;
}
var fsac = new custom.MedicationSelectAutoComplete({url:'<?=$this->chBaseMed24Url?>',requestMethod:"post",doClientPaging:true},'formularySelectAutoComplete');
var fscb = new custom.MedicationSelectComboBox({name:"formulary[tradename]",value:'',autocomplete:false,store:fsac,hasDownArrow:false},"formularySelectAutoCompleteDiv");
// change combobox width
fscb.domNode.style.width = "470px";

function populateFormularyDetails(data) {
	dojo.byId("formularyAddButton").disabled = false;
}

function getFormularyCHMedDetails(arg) {
	var tradename = arg;
	var pkey = fscb.selectedKey;
	dojo.xhrPost({
		url: '<?=$this->chBaseMed24DetailUrl?>',
		content: {
			'': pkey,
		},
		handleAs: 'json',
		load: function (data) {
			currentFormularyData = data;
			populateFormularyDetails();
			dojo.byId("formularyAddButton").disabled = false;
		},
		error: function (er) {
			alert('err: ' + er);
		}
	});
}
dojo.connect(fscb,"onChange",'getFormularyCHMedDetails');

// Formulary Grid
var formularyGrid =  new dhtmlXGridObject("formularyGridContainer");
formularyGrid.setImagePath("<?=$this->baseUrl?>/img/");
formularyGrid.setHeader('<?=__('Drug')?>,<?=__('Directions')?>,<?=__('Comments')?>,<?=__('Schedule')?>,<?=__('Label Id')?>,<?=__('External Url')?>,<?=__('Price')?>,<?=__('Qty')?>,<?=__('Keywords')?>');
formularyGrid.setColTypes("ro,ed,ed,ed,ed,ed,ed,ed,ed");
formularyGrid.setSkin("xp");
formularyGrid.setInitWidths("*,*,*,70,50,*,50,50,*");
formularyGrid.setColAlign("right,left,right,center,center,center,left,center,left,left");
formularyGrid.init();
formularyGrid.load('<?=$this->baseUrl?>/formulary-manager.raw/list-formularies?name=<?=$this->tableName?>',null,"json");

function reloadFormularyGrid() {
	formularyGrid.clearAll();
	formularyGrid.load('<?=$this->baseUrl?>/formulary-manager.raw/list-formularies?name=<?=$this->tableName?>',null,"json");
}

formularyGrid.attachEvent("onRowSelect",onFormularyRowSelected);
function onFormularyRowSelected(rowId,cellIndex) {
}

function enumSingleUpdate(field,id,value,callback) {
}

function formularySingleUpdate(field,id,value,callback) {
	dojo.xhrPost({
		url: "<?=$this->baseUrl?>/formulary-manager.raw/process-single-update",
		handleAs: "json",
		content: {
			name: '<?=$this->tableName?>',
			field: field,
			id: id,
			value: value,
		},
		load: function (data) {
			if (typeof callback == 'function') {
				callback(data);
			}
		},
		error: function (error) {
			alert(error);
			console.error ('Error: ', error);
		}
	});
}

function formularyOnUpdated(data) {
	reloadFormularyGrid();
}

formularyGrid.attachEvent("onEditCell",formularyOnEditCell);
function formularyOnEditCell(stage,rowId,cellIndex,newValue,oldValue) {
	switch (stage) {
		case 2:
			if (cellIndex > 0 && newValue != oldValue) {
				var field = '';
				var fieldNameLookup = new Array();
				fieldNameLookup[1] = 'directions';
				fieldNameLookup[2] = 'comments';
				fieldNameLookup[3] = 'schedule';
				fieldNameLookup[4] = 'labelId';
				fieldNameLookup[5] = 'externalUrl';
				fieldNameLookup[6] = 'price';
				fieldNameLookup[7] = 'qty';
				fieldNameLookup[8] = 'keywords';
				formularySingleUpdate(fieldNameLookup[cellIndex],rowId,newValue,formularyOnUpdated);
			}
			break;
	}
	return true;
}

var formularyMenu = new dhtmlXMenuObject(null,'standard');
formularyMenu.setImagePath("<?=$this->baseUrl?>/img/");
formularyMenu.renderAsContextMenu();
formularyMenu.setOpenMode("web");
formularyMenu.attachEvent('onClick',onFormularyMenuClicked);
formularyMenu.loadXML('<?=$this->baseUrl?>/formulary-manager.raw/formulary-context-menu');
function onFormularyMenuClicked(menuItemId,type) {
	var formulary = type.split('_');
	switch (menuItemId) {
		case "formularyDelete":
			dojo.xhrPost({
				url: '<?=$this->baseUrl?>/formulary-manager.raw/process-delete-formulary',
				content: {
					'name': '<?=$this->tableName?>',
					'formularyId': formulary[0],
				},
				handleAs: 'json',
				load: function (data) {
					reloadFormularyGrid();
				},
				error: function (er) {
					alert('err: ' + er);
				}
			});
			break;
	}
}

formularyGrid.enableContextMenu(formularyMenu);
dhtmlxEvent(formularyGrid.entBox,"contextmenu",function(e){
	(e||event).cancelBubble=true;
	return false;
});

</script>
